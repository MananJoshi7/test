import java.util.Scanner;

class Stack {
    private int[] stack;
    private int top;
    private final int MAX_SIZE = 10;

    public Stack() {
        stack = new int[MAX_SIZE];
        top = -1; // Indicates an empty stack
    }

    public void push(int value) {
        if (top < MAX_SIZE - 1) {
            stack[++top] = value;
            System.out.println(value + " pushed onto stack.");
        } else {
            System.out.println("Stack is full! Cannot push " + value);
        }
    }

    public void pop() {
        if (top >= 0) {
            int poppedValue = stack[top--];
            System.out.println(poppedValue + " popped from stack.");
        } else {
            System.out.println("Stack is empty! Cannot pop.");
        }
    }

    public void displayStack() {
        if (top >= 0) {
            System.out.print("Stack: ");
            for (int i = top; i >= 0; i--) {
                System.out.print(stack[i] + " ");
            }
            System.out.println();
        } else {
            System.out.println("Stack is empty.");
        }
    }
}

public class StackDemo {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Stack stack = new Stack();

        // Example usage
        stack.push(10);
        stack.push(20);
        stack.push(30);
        stack.displayStack();
        
        stack.pop();
        stack.displayStack();
        
        stack.push(40);
        stack.push(50);
        stack.push(60);
        stack.push(70);
        stack.push(80);
        stack.push(90);
        stack.push(100);
        stack.push(110); // This should show a stack overflow message
        stack.displayStack();
        
        // Popping all elements
        stack.pop();
        stack.pop();
        stack.pop();
        stack.displayStack();
        
        sc.close();
    }
}
